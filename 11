https://sub.niceduck.cloud/api/v1/client/subscribe?token=4d2120290584c65494fb21a1ed5adaa7
Wrong version: PhysX version is 0x%08x, tried to create 0x%08x
__int64 v2; // rdi
  __int64 *v3; // r12
  __int64 v4; // rsi
  __int64 v5; // rax
  int v6; // ecx
  __int64 v7; // rdx
  int v8; // ebx
  __int64 v9; // r14
  void *v10; // rdx
  __int64 v11; // rax
  __int64 v12; // rsi
  int v13; // ebx
  __int64 v14; // rax
  int v15; // ecx
  int v17; // ebx
  int v18; // eax
  __int64 v19; // rcx
  unsigned int v20; // eax
  unsigned int v21; // edx
  int v22; // eax
  __int64 v23; // rdx
  __int64 v24; // rt2
  __int64 v25; // rcx
  __int64 v26; // r13
  __int64 v27; // r14
  signed __int64 v28; // r15
  __int64 v29; // r8
  int v30; // ebx
  int v31; // ecx
  unsigned __int64 v32; // rax
  unsigned int v33; // eax
  int v34; // eax
  int v35; // ebx
  bool v36; // sf
  int v37; // ebx
  __int64 v38; // rdi
  __int64 v39; // rdi
  __int64 v40; // rax
  int v41; // eax
  __int64 v42; // rcx
  unsigned __int64 v43; // rbx
  unsigned int v44; // edi
  __int64 v45; // rsi
  _DWORD *v46; // r12
  int v47; // er15
  unsigned __int64 v48; // r11
  unsigned __int64 v49; // r14
  unsigned __int64 v50; // rbx
  unsigned __int64 v51; // r11
  __int64 v52; // rdx
  unsigned int v53; // er10
  unsigned __int64 v54; // r8
  unsigned __int64 v55; // r9
  __int64 v56; // rax
  unsigned __int64 v57; // rcx
  unsigned __int64 v58; // rax
  unsigned __int64 v59; // rdx
  __int64 v60; // r8
  unsigned int v61; // ecx
  unsigned int v62; // ecx
  __int64 v63; // r9
  unsigned __int64 v64; // rcx
  unsigned __int64 v65; // rdx
  __int64 v66; // rcx
  __int64 v67; // rax
  unsigned __int64 v68; // rcx
  unsigned __int64 v69; // rax
  unsigned __int64 v70; // rdx
  unsigned int v71; // ecx
  __int64 v72; // r8
  unsigned __int64 v73; // rcx
  unsigned __int64 v74; // rdx
  unsigned __int64 v75; // rcx
  int v76; // ecx
  int v77; // eax
  __int64 *v78; // r9
  __int64 v79; // r13
  int v80; // edi
  bool v81; // cc
  _DWORD *v82; // r15
  int v83; // er14
  unsigned __int64 v84; // rdi
  unsigned __int64 v85; // r10
  unsigned __int64 v86; // rbx
  unsigned int v87; // er11
  unsigned __int64 v88; // r8
  __int64 v89; // rax
  unsigned __int64 v90; // rdx
  unsigned __int64 v91; // rcx
  unsigned __int64 v92; // rdx
  unsigned int v93; // ecx
  __int64 v94; // r9
  unsigned __int64 v95; // rcx
  unsigned __int64 v96; // rdx
  unsigned __int64 v97; // rcx
  unsigned __int64 v98; // r9
  __int64 v99; // rax
  unsigned __int64 v100; // rdx
  unsigned __int64 v101; // rcx
  unsigned __int64 v102; // rdx
  unsigned int v103; // ecx
  __int64 v104; // r8
  unsigned __int64 v105; // rcx
  unsigned __int64 v106; // rdx
  unsigned __int64 v107; // rcx
  int v108; // ecx
  int v109; // eax
  __int64 v110; // rdx
  __int64 v111; // r15
  unsigned __int64 v112; // rbx
  unsigned __int64 v113; // r8
  unsigned __int64 v114; // r9
  __int64 v115; // rax
  unsigned __int64 v116; // rcx
  unsigned __int64 v117; // rax
  unsigned __int64 v118; // rdx
  unsigned int v119; // ecx
  __int64 v120; // r9
  __int64 v121; // rax
  unsigned __int64 v122; // rcx
  __int64 v123; // rax
  unsigned __int64 v124; // rcx
  unsigned __int64 v125; // rax
  unsigned __int64 v126; // rdx
  unsigned int v127; // ecx
  __int64 v128; // r8
  __int64 v129; // rax
  unsigned __int64 v130; // rcx
  int v131; // eax
  __int64 v132; // rdx
  int v133; // ebx
  __int64 v134; // r14
  int *v135; // rdi
  __int64 i; // rbx
  int *v137; // rdi
  __int64 v138; // rbx
  __int64 v139; // rax
  __int64 v140; // r12
  __int64 v141; // r13
  _DWORD *v142; // r12
  int v143; // esi
  unsigned __int64 v144; // r14
  unsigned __int64 v145; // r11
  unsigned __int64 v146; // rbx
  unsigned int v147; // er10
  unsigned __int64 v148; // r8
  unsigned __int64 v149; // r9
  __int64 v150; // rax
  unsigned __int64 v151; // rcx
  unsigned __int64 v152; // rax
  unsigned __int64 v153; // rdx
  unsigned int v154; // ecx
  __int64 v155; // r9
  unsigned __int64 v156; // rcx
  unsigned __int64 v157; // rdx
  __int64 v158; // rax
  unsigned __int64 v159; // rcx
  unsigned __int64 v160; // rax
  unsigned __int64 v161; // rdx
  unsigned int v162; // ecx
  __int64 v163; // r8
  unsigned __int64 v164; // rcx
  unsigned __int64 v165; // rdx
  unsigned __int64 v166; // rcx
  int v167; // ecx
  int v168; // eax
  __int64 v169; // r15
  int v170; // edi
  __int64 v171; // r14
  int v172; // esi
  unsigned __int64 v173; // rdi
  unsigned __int64 v174; // r10
  unsigned __int64 v175; // rbx
  unsigned int v176; // er11
  unsigned __int64 v177; // r8
  __int64 v178; // rax
  unsigned __int64 v179; // rdx
  unsigned __int64 v180; // rcx
  unsigned __int64 v181; // rdx
  unsigned int v182; // ecx
  __int64 v183; // r9
  unsigned __int64 v184; // rcx
  unsigned __int64 v185; // rdx
  unsigned __int64 v186; // rcx
  unsigned __int64 v187; // r9
  __int64 v188; // rax
  unsigned __int64 v189; // rdx
  unsigned __int64 v190; // rcx
  unsigned __int64 v191; // rdx
  unsigned int v192; // ecx
  __int64 v193; // r8
  unsigned __int64 v194; // rcx
  unsigned __int64 v195; // rdx
  unsigned __int64 v196; // rcx
  int v197; // ecx
  int v198; // eax
  __int64 v199; // rdx
  unsigned __int64 v200; // r11
  unsigned __int64 v201; // r8
  unsigned __int64 v202; // r9
  __int64 v203; // rax
  unsigned __int64 v204; // rcx
  unsigned __int64 v205; // rax
  unsigned __int64 v206; // rdx
  unsigned int v207; // ecx
  __int64 v208; // r9
  __int64 v209; // rax
  unsigned __int64 v210; // rcx
  __int64 v211; // rax
  unsigned __int64 v212; // rcx
  unsigned __int64 v213; // rax
  unsigned __int64 v214; // rdx
  unsigned int v215; // ecx
  __int64 v216; // r8
  __int64 v217; // rax
  unsigned __int64 v218; // rcx
  int v219; // eax
  __int64 v220; // rdx
  int v221; // ebx
  __int64 v222; // rsi
  int *v223; // rdi
  __int64 m; // rbx
  int *v225; // rdi
  __int64 n; // rbx
  __int64 v227; // rcx
  __int64 v228; // r14
  __int64 v229; // rax
  _QWORD *v230; // r13
  __int64 v231; // r14
  int v232; // edi
  unsigned __int64 v233; // rsi
  unsigned __int64 v234; // r11
  unsigned __int64 v235; // rbx
  unsigned int v236; // er10
  unsigned __int64 v237; // r8
  __int64 v238; // rax
  unsigned __int64 v239; // rdx
  unsigned __int64 v240; // rcx
  unsigned __int64 v241; // rdx
  unsigned int v242; // ecx
  __int64 v243; // r9
  unsigned __int64 v244; // rcx
  unsigned __int64 v245; // rdx
  unsigned __int64 v246; // r9
  __int64 v247; // rax
  unsigned __int64 v248; // rdx
  unsigned __int64 v249; // rcx
  unsigned __int64 v250; // rdx
  unsigned int v251; // ecx
  __int64 v252; // r8
  unsigned __int64 v253; // rcx
  unsigned __int64 v254; // rdx
  unsigned __int64 v255; // rcx
  int v256; // eax
  __int64 v257; // r15
  int v258; // edi
  __int64 v259; // r13
  int v260; // esi
  unsigned __int64 v261; // rdi
  unsigned __int64 v262; // r10
  unsigned __int64 v263; // rbx
  unsigned int v264; // er11
  unsigned __int64 v265; // r8
  __int64 v266; // rax
  unsigned __int64 v267; // rdx
  unsigned __int64 v268; // rcx
  unsigned __int64 v269; // rdx
  unsigned int v270; // ecx
  __int64 v271; // r9
  unsigned __int64 v272; // rcx
  unsigned __int64 v273; // rdx
  unsigned __int64 v274; // rcx
  unsigned __int64 v275; // r9
  __int64 v276; // rax
  unsigned __int64 v277; // rdx
  unsigned __int64 v278; // rcx
  unsigned __int64 v279; // rdx
  unsigned int v280; // ecx
  __int64 v281; // r8
  unsigned __int64 v282; // rcx
  unsigned __int64 v283; // rdx
  unsigned __int64 v284; // rcx
  int v285; // ecx
  int v286; // eax
  __int64 v287; // rdx
  unsigned __int64 v288; // r11
  unsigned __int64 v289; // r8
  unsigned __int64 v290; // r9
  __int64 v291; // rax
  unsigned __int64 v292; // rcx
  unsigned __int64 v293; // rax
  unsigned __int64 v294; // rdx
  unsigned int v295; // ecx
  __int64 v296; // r9
  __int64 v297; // rax
  unsigned __int64 v298; // rcx
  __int64 v299; // rax
  unsigned __int64 v300; // rcx
  unsigned __int64 v301; // rax
  unsigned __int64 v302; // rdx
  unsigned int v303; // ecx
  __int64 v304; // r8
  __int64 v305; // rax
  unsigned __int64 v306; // rcx
  int v307; // eax
  __int64 v308; // rdx
  int v309; // ebx
  __int64 v310; // rsi
  int *v311; // rdi
  __int64 i3; // rbx
  int *v313; // rdi
  __int64 i4; // rbx
  signed __int64 v315; // rdi
  __int64 v316; // rbx
  int v317; // er13
  int v318; // edx
  __int64 v319; // rdi
  __int64 v320; // rax
  unsigned int v321; // ebx
  signed __int64 v322; // rdi
  __int64 v323; // rbx
  int v324; // er13
  int v325; // edx
  __int64 v326; // rax
  unsigned int v327; // ebx
  _DWORD *v328; // r12
  int v329; // er15
  unsigned __int64 v330; // r11
  unsigned __int64 v331; // r14
  unsigned __int64 v332; // rbx
  unsigned __int64 v333; // r11
  __int64 v334; // rdx
  unsigned int v335; // er10
  unsigned __int64 v336; // r8
  unsigned __int64 v337; // r9
  __int64 v338; // rax
  unsigned __int64 v339; // rcx
  unsigned __int64 v340; // rax
  unsigned __int64 v341; // rdx
  __int64 v342; // r8
  unsigned int v343; // ecx
  unsigned int v344; // ecx
  __int64 v345; // r9
  unsigned __int64 v346; // rcx
  unsigned __int64 v347; // rdx
  __int64 v348; // rcx
  __int64 v349; // rax
  unsigned __int64 v350; // rcx
  unsigned __int64 v351; // rax
  unsigned __int64 v352; // rdx
  unsigned int v353; // ecx
  __int64 v354; // r8
  unsigned __int64 v355; // rcx
  unsigned __int64 v356; // rdx
  unsigned __int64 v357; // rcx
  int v358; // ecx
  int v359; // eax
  __int64 *v360; // r9
  int v361; // edi
  unsigned __int64 v362; // rdi
  unsigned __int64 v363; // rbx
  unsigned __int64 v364; // r10
  unsigned int v365; // er11
  unsigned __int64 v366; // r8
  unsigned __int64 v367; // rcx
  unsigned __int64 v368; // rdx
  unsigned __int64 v369; // rdx
  unsigned __int64 v370; // rdx
  unsigned int v371; // ecx
  __int64 v372; // r9
  unsigned __int64 v373; // rcx
  unsigned __int64 v374; // rcx
  unsigned __int64 v375; // rcx
  unsigned __int64 v376; // r9
  unsigned __int64 v377; // rcx
  unsigned __int64 v378; // rdx
  unsigned __int64 v379; // rdx
  unsigned __int64 v380; // rdx
  unsigned int v381; // ecx
  __int64 v382; // r8
  unsigned __int64 v383; // rcx
  unsigned __int64 v384; // rcx
  unsigned __int64 v385; // rcx
  int v386; // eax
  int v387; // ecx
  __int64 v388; // rdx
  unsigned __int64 v389; // rbx
  unsigned __int64 v390; // r8
  unsigned __int64 v391; // r9
  __int64 v392; // rax
  unsigned __int64 v393; // rcx
  unsigned __int64 v394; // rax
  unsigned __int64 v395; // rdx
  unsigned int v396; // ecx
  __int64 v397; // r9
  __int64 v398; // rax
  unsigned __int64 v399; // rcx
  __int64 v400; // rax
  unsigned __int64 v401; // rcx
  unsigned __int64 v402; // rax
  unsigned __int64 v403; // rdx
  unsigned int v404; // ecx
  __int64 v405; // r8
  __int64 v406; // rax
  unsigned __int64 v407; // rcx
  int v408; // eax
  __int64 v409; // rdx
  int v410; // ebx
  __int64 v411; // r14
  int *v412; // rdi
  __int64 j; // rbx
  int *v414; // rdi
  __int64 v415; // rbx
  __int64 v416; // rax
  _DWORD *v417; // r12
  __int64 *v418; // rax
  int v419; // er15
  unsigned __int64 v420; // r11
  unsigned __int64 v421; // r14
  unsigned __int64 v422; // rbx
  unsigned __int64 v423; // r11
  __int64 v424; // rdx
  unsigned int v425; // er10
  unsigned __int64 v426; // r8
  unsigned __int64 v427; // r9
  __int64 v428; // rax
  unsigned __int64 v429; // rcx
  unsigned __int64 v430; // rax
  unsigned __int64 v431; // rdx
  __int64 v432; // r8
  unsigned int v433; // ecx
  unsigned int v434; // ecx
  __int64 v435; // r9
  unsigned __int64 v436; // rcx
  unsigned __int64 v437; // rdx
  __int64 v438; // rcx
  __int64 v439; // rax
  unsigned __int64 v440; // rcx
  unsigned __int64 v441; // rax
  unsigned __int64 v442; // rdx
  unsigned int v443; // ecx
  __int64 v444; // r8
  unsigned __int64 v445; // rcx
  unsigned __int64 v446; // rdx
  unsigned __int64 v447; // rcx
  int v448; // ecx
  int v449; // eax
  __int64 *v450; // r9
  __int64 v451; // r13
  int v452; // edi
  int v453; // er14
  unsigned __int64 v454; // rdi
  unsigned __int64 v455; // r10
  unsigned __int64 v456; // rbx
  unsigned int v457; // er11
  unsigned __int64 v458; // r8
  __int64 v459; // rax
  unsigned __int64 v460; // rdx
  unsigned __int64 v461; // rcx
  unsigned __int64 v462; // rdx
  unsigned int v463; // ecx
  __int64 v464; // r9
  unsigned __int64 v465; // rcx
  unsigned __int64 v466; // rdx
  unsigned __int64 v467; // rcx
  unsigned __int64 v468; // r9
  __int64 v469; // rax
  unsigned __int64 v470; // rdx
  unsigned __int64 v471; // rcx
  unsigned __int64 v472; // rdx
  unsigned int v473; // ecx
  __int64 v474; // r8
  unsigned __int64 v475; // rcx
  unsigned __int64 v476; // rdx
  unsigned __int64 v477; // rcx
  int v478; // ecx
  int v479; // eax
  __int64 v480; // rdx
  unsigned __int64 v481; // rbx
  unsigned __int64 v482; // r8
  unsigned __int64 v483; // r9
  __int64 v484; // rax
  unsigned __int64 v485; // rcx
  unsigned __int64 v486; // rax
  unsigned __int64 v487; // rdx
  unsigned int v488; // ecx
  __int64 v489; // r9
  __int64 v490; // rax
  unsigned __int64 v491; // rcx
  __int64 v492; // rax
  unsigned __int64 v493; // rcx
  unsigned __int64 v494; // rax
  unsigned __int64 v495; // rdx
  unsigned int v496; // ecx
  __int64 v497; // r8
  __int64 v498; // rax
  unsigned __int64 v499; // rcx
  int v500; // eax
  __int64 v501; // rdx
  int v502; // ebx
  __int64 v503; // r14
  int *v504; // rdi
  __int64 k; // rbx
  int *v506; // rdi
  __int64 v507; // rbx
  __int64 v508; // rbx
  int v509; // er13
  __int64 v510; // rbx
  __int64 v511; // rdi
  int v512; // er13
  __int64 v513; // rsi
  __int64 v514; // rdi
  __int64 v515; // rax
  __int64 v516; // rdi
  int v517; // er13
  __int64 v518; // rsi
  __int64 v519; // rdi
  void (__fastcall *v520)(__int64, void **); // rax
  _DWORD *v521; // rdi
  __int64 v522; // rbx
  int v523; // er13
  __int64 v524; // r15
  __int64 v525; // rbx
  unsigned __int64 v526; // rsi
  int v527; // er13
  unsigned int v528; // ecx
  int v529; // eax
  int v530; // eax
  int v531; // eax
  unsigned int v532; // ebx
  unsigned int ii; // ebx
  __int64 v534; // rax
  signed __int64 v535; // rdi
  __int64 v536; // rbx
  int v537; // er13
  __int64 v538; // r15
  __int64 v539; // rbx
  unsigned __int64 v540; // rsi
  unsigned int v541; // ecx
  int v542; // eax
  unsigned int jj; // ebx
  int v544; // er14
  int v545; // esi
  unsigned __int64 v546; // r15
  unsigned __int64 v547; // rdi
  unsigned __int64 v548; // r11
  unsigned int v549; // er10
  unsigned __int64 v550; // r8
  __int64 v551; // rax
  unsigned __int64 v552; // rcx
  unsigned __int64 v553; // rax
  unsigned __int64 v554; // rdx
  unsigned int v555; // ecx
  __int64 v556; // r9
  unsigned __int64 v557; // rcx
  unsigned __int64 v558; // rdx
  unsigned __int64 v559; // rcx
  unsigned __int64 v560; // r9
  __int64 v561; // rdx
  bool v562; // zf
  unsigned __int64 v563; // rcx
  unsigned __int64 v564; // rcx
  unsigned __int64 v565; // rdx
  unsigned int v566; // ecx
  __int64 v567; // r8
  unsigned __int64 v568; // rdx
  unsigned __int64 v569; // rcx
  int v570; // er14
  unsigned __int64 v571; // rbx
  unsigned __int64 v572; // r8
  __int64 v573; // rax
  unsigned __int64 v574; // rcx
  unsigned __int64 v575; // rax
  unsigned __int64 v576; // rdx
  __int64 v577; // r8
  unsigned int v578; // ecx
  unsigned int v579; // ecx
  __int64 v580; // r9
  unsigned __int64 v581; // rcx
  unsigned __int64 v582; // rdx
  __int64 v583; // rcx
  unsigned __int64 v584; // r9
  __int64 v585; // rax
  unsigned __int64 v586; // rcx
  unsigned __int64 v587; // rax
  unsigned __int64 v588; // rdx
  unsigned int v589; // ecx
  __int64 v590; // r8
  unsigned __int64 v591; // rcx
  unsigned __int64 v592; // rdx
  unsigned __int64 v593; // rcx
  int v594; // ecx
  int v595; // eax
  __int64 *v596; // r9
  int v597; // edi
  unsigned __int64 v598; // rdi
  unsigned __int64 v599; // r10
  unsigned __int64 v600; // rbx
  unsigned int v601; // er11
  unsigned __int64 v602; // r8
  __int64 v603; // rax
  unsigned __int64 v604; // rdx
  unsigned __int64 v605; // rcx
  unsigned __int64 v606; // rdx
  unsigned int v607; // ecx
  __int64 v608; // r9
  unsigned __int64 v609; // rcx
  unsigned __int64 v610; // rdx
  unsigned __int64 v611; // rcx
  unsigned __int64 v612; // r9
  __int64 v613; // rax
  unsigned __int64 v614; // rdx
  unsigned __int64 v615; // rcx
  unsigned __int64 v616; // rdx
  unsigned int v617; // ecx
  __int64 v618; // r8
  unsigned __int64 v619; // rcx
  unsigned __int64 v620; // rdx
  unsigned __int64 v621; // rcx
  int v622; // ecx
  int v623; // eax
  unsigned __int64 v624; // rbx
  unsigned __int64 v625; // r8
  unsigned __int64 v626; // r9
  __int64 v627; // rax
  unsigned __int64 v628; // rcx
  unsigned __int64 v629; // rax
  unsigned __int64 v630; // rdx
  unsigned int v631; // ecx
  __int64 v632; // r9
  __int64 v633; // rax
  unsigned __int64 v634; // rcx
  __int64 v635; // rax
  unsigned __int64 v636; // rcx
  unsigned __int64 v637; // rax
  unsigned __int64 v638; // rdx
  unsigned int v639; // ecx
  __int64 v640; // r8
  __int64 v641; // rax
  unsigned __int64 v642; // rcx
  int v643; // eax
  __int64 v644; // rdx
  int v645; // ebx
  __int64 v646; // r14
  int *v647; // rdi
  __int64 kk; // rbx
  int *v649; // rdi
  __int64 v650; // rbx
  __int64 v651; // rax
  __int64 v652; // r14
  __int64 v653; // rax
  __int64 v654; // rcx
  int v655; // er14
  int v656; // edi
  unsigned __int64 v657; // rsi
  unsigned __int64 v658; // rbx
  unsigned __int64 v659; // r11
  unsigned int v660; // er10
  unsigned __int64 v661; // r8
  unsigned __int64 v662; // r9
  __int64 v663; // rax
  unsigned __int64 v664; // rcx
  unsigned __int64 v665; // rax
  unsigned __int64 v666; // rdx
  unsigned int v667; // ecx
  __int64 v668; // r9
  unsigned __int64 v669; // rcx
  unsigned __int64 v670; // rdx
  __int64 v671; // rax
  unsigned __int64 v672; // rcx
  unsigned __int64 v673; // rax
  unsigned __int64 v674; // rdx
  unsigned int v675; // ecx
  __int64 v676; // r8
  unsigned __int64 v677; // rcx
  unsigned __int64 v678; // rdx
  unsigned __int64 v679; // rcx
  __int64 v680; // rdx
  _DWORD *v681; // r13
  __int64 v682; // r14
  int v683; // edi
  unsigned __int64 v684; // rbx
  unsigned __int64 v685; // r8
  __int64 v686; // rax
  unsigned __int64 v687; // rdx
  unsigned __int64 v688; // rcx
  unsigned __int64 v689; // rdx
  unsigned int v690; // ecx
  __int64 v691; // r9
  unsigned __int64 v692; // rcx
  unsigned __int64 v693; // rdx
  unsigned __int64 v694; // r9
  __int64 v695; // rax
  unsigned __int64 v696; // rdx
  unsigned __int64 v697; // rcx
  unsigned __int64 v698; // rdx
  unsigned int v699; // ecx
  __int64 v700; // r8
  unsigned __int64 v701; // rcx
  unsigned __int64 v702; // rdx
  unsigned __int64 v703; // rcx
  int v704; // ecx
  int v705; // eax
  __int64 v706; // r15
  int v707; // ebx
  int v708; // esi
  unsigned __int64 v709; // rdi
  unsigned __int64 v710; // r10
  unsigned __int64 v711; // rbx
  unsigned int v712; // er11
  unsigned __int64 v713; // r8
  __int64 v714; // rax
  unsigned __int64 v715; // rdx
  unsigned __int64 v716; // rcx
  unsigned __int64 v717; // rdx
  unsigned int v718; // ecx
  __int64 v719; // r9
  unsigned __int64 v720; // rcx
  unsigned __int64 v721; // rdx
  unsigned __int64 v722; // rcx
  unsigned __int64 v723; // r9
  __int64 v724; // rax
  unsigned __int64 v725; // rdx
  unsigned __int64 v726; // rcx
  unsigned __int64 v727; // rdx
  unsigned int v728; // ecx
  __int64 v729; // r8
  unsigned __int64 v730; // rcx
  unsigned __int64 v731; // rdx
  unsigned __int64 v732; // rcx
  int v733; // ecx
  int v734; // eax
  __int64 v735; // rdx
  unsigned __int64 v736; // r9
  unsigned __int64 v737; // r8
  unsigned __int64 v738; // rax
  __int64 v739; // rax
  unsigned __int64 v740; // rcx
  unsigned __int64 v741; // rax
  unsigned __int64 v742; // rdx
  unsigned int v743; // ecx
  __int64 v744; // rdi
  __int64 v745; // rax
  unsigned __int64 v746; // rcx
  __int64 v747; // rax
  unsigned __int64 v748; // rcx
  unsigned __int64 v749; // rax
  unsigned __int64 v750; // rdx
  unsigned int v751; // ecx
  __int64 v752; // r11
  unsigned __int64 v753; // rcx
  unsigned __int64 v754; // rdx
  unsigned __int64 v755; // r8
  int v756; // ecx
  __int64 v757; // rdx
  int v758; // ebx
  __int64 v759; // rsi
  int *v760; // rdi
  __int64 mm; // rbx
  int *v762; // rdi
  __int64 nn; // rbx
  __int64 v764; // rax
  unsigned int v765; // edi
  int v766; // er13
  __int64 v767; // rsi
  __int64 v768; // rdx
  unsigned __int64 v769; // r11
  unsigned __int64 v770; // r14
  unsigned __int64 v771; // rbx
  unsigned __int64 v772; // r11
  unsigned int v773; // er10
  unsigned __int64 v774; // r8
  unsigned __int64 v775; // r9
  __int64 v776; // rax
  unsigned __int64 v777; // rcx
  unsigned __int64 v778; // rax
  unsigned __int64 v779; // rdx
  __int64 v780; // r8
  unsigned int v781; // ecx
  unsigned int v782; // ecx
  __int64 v783; // r9
  unsigned __int64 v784; // rcx
  unsigned __int64 v785; // rdx
  __int64 v786; // rcx
  __int64 v787; // rax
  unsigned __int64 v788; // rcx
  unsigned __int64 v789; // rax
  unsigned __int64 v790; // rdx
  unsigned int v791; // ecx
  __int64 v792; // r8
  unsigned __int64 v793; // rcx
  unsigned __int64 v794; // rdx
  unsigned __int64 v795; // rcx
  int v796; // ecx
  int v797; // eax
  __int64 *v798; // r9
  int v799; // edi
  unsigned __int64 v800; // rbx
  unsigned __int64 v801; // r8
  unsigned __int64 v802; // r9
  __int64 v803; // rax
  unsigned __int64 v804; // rcx
  unsigned __int64 v805; // rax
  unsigned __int64 v806; // rdx
  unsigned int v807; // ecx
  __int64 v808; // r9
  __int64 v809; // rax
  unsigned __int64 v810; // rcx
  __int64 v811; // rax
  unsigned __int64 v812; // rcx
  unsigned __int64 v813; // rax
  unsigned __int64 v814; // rdx
  unsigned int v815; // ecx
  __int64 v816; // r8
  __int64 v817; // rax
  unsigned __int64 v818; // rcx
  int v819; // eax
  __int64 v820; // rdx
  int v821; // ebx
  __int64 v822; // r14
  int *v823; // rdi
  __int64 i1; // rbx
  int *v825; // rdi
  __int64 v826; // rbx
  unsigned __int64 v827; // r11
  unsigned __int64 v828; // r14
  unsigned __int64 v829; // rbx
  unsigned __int64 v830; // r11
  unsigned int v831; // er10
  unsigned __int64 v832; // r8
  unsigned __int64 v833; // r9
  __int64 v834; // rax
  unsigned __int64 v835; // rcx
  unsigned __int64 v836; // rax
  unsigned __int64 v837; // rdx
  __int64 v838; // r8
  unsigned int v839; // ecx
  unsigned int v840; // ecx
  __int64 v841; // r9
  unsigned __int64 v842; // rcx
  unsigned __int64 v843; // rdx
  __int64 v844; // rcx
  __int64 v845; // rax
  unsigned __int64 v846; // rcx
  unsigned __int64 v847; // rax
  unsigned __int64 v848; // rdx
  unsigned int v849; // ecx
  __int64 v850; // r8
  unsigned __int64 v851; // rcx
  unsigned __int64 v852; // rdx
  unsigned __int64 v853; // rcx
  int v854; // ecx
  int v855; // eax
  __int64 *v856; // r9
  int v857; // edi
  unsigned __int64 v858; // rbx
  unsigned __int64 v859; // r8
  unsigned __int64 v860; // r9
  __int64 v861; // rax
  unsigned __int64 v862; // rcx
  unsigned __int64 v863; // rax
  unsigned __int64 v864; // rdx
  unsigned int v865; // ecx
  __int64 v866; // r9
  __int64 v867; // rax
  unsigned __int64 v868; // rcx
  __int64 v869; // rax
  unsigned __int64 v870; // rcx
  unsigned __int64 v871; // rax
  unsigned __int64 v872; // rdx
  unsigned int v873; // ecx
  __int64 v874; // r8
  __int64 v875; // rax
  unsigned __int64 v876; // rcx
  int v877; // eax
  __int64 v878; // rdx
  int v879; // ebx
  __int64 v880; // r14
  int *v881; // rdi
  __int64 i2; // rbx
  int *v883; // rdi
  __int64 v884; // rbx
  int v885; // ebx
  __int16 *v886; // rax
  __int64 v887; // rax
  __int64 v888; // rax
  int v889; // ebx
  int v890; // ebx
  __int16 *v891; // rax
  __int128 v892; // xmm1
  __int64 v893; // rbx
  int v894; // [rsp+28h] [rbp-D8h]
  unsigned int v895; // [rsp+40h] [rbp-C0h]
  int v896; // [rsp+44h] [rbp-BCh] BYREF
  __int64 *v897; // [rsp+48h] [rbp-B8h]
  __int64 v898; // [rsp+50h] [rbp-B0h]
  __int64 v899; // [rsp+58h] [rbp-A8h]
  __int64 v900; // [rsp+60h] [rbp-A0h]
  __int64 v901; // [rsp+68h] [rbp-98h] BYREF
  unsigned __int64 v902; // [rsp+70h] [rbp-90h]
  __int64 v903; // [rsp+78h] [rbp-88h] BYREF
  __int64 v904; // [rsp+80h] [rbp-80h]
  __int64 *v905; // [rsp+88h] [rbp-78h]
  __int64 v906; // [rsp+90h] [rbp-70h]
  char v907[4]; // [rsp+98h] [rbp-68h] BYREF
  unsigned int v908; // [rsp+9Ch] [rbp-64h]
  _QWORD *v909; // [rsp+A0h] [rbp-60h]
  __int64 v910; // [rsp+A8h] [rbp-58h] BYREF
  __int64 v911; // [rsp+B0h] [rbp-50h] BYREF
  __int64 v912; // [rsp+B8h] [rbp-48h]
  int v913; // [rsp+C0h] [rbp-40h]
  __int64 v914; // [rsp+C8h] [rbp-38h]
  __int64 v915[2]; // [rsp+D0h] [rbp-30h] BYREF
  __int64 v916; // [rsp+E0h] [rbp-20h]
  __int64 v917; // [rsp+E8h] [rbp-18h] BYREF
  int v918; // [rsp+F0h] [rbp-10h]
  char v919[8]; // [rsp+F8h] [rbp-8h] BYREF
  int v920; // [rsp+100h] [rbp+0h]
  void *v921; // [rsp+108h] [rbp+8h] BYREF
  __int128 v922; // [rsp+110h] [rbp+10h]
  __int64 v923; // [rsp+120h] [rbp+20h]
  __int64 v924; // [rsp+128h] [rbp+28h]

v48 = 0x2545F4914F6CDD1Di64
                * ((unsigned int)key ^ (unsigned int)((_DWORD)key << 25) ^ (((unsigned int)key ^ ((unsigned __int64)(unsigned int)key >> 15)) >> 12));
            v52 = (v48 * (unsigned __int128)0x2492492492492493ui64) >> 64;
            v49 = v48 % 7;
            v50 = state[v49];
            v51 = HIDWORD(v48);
            LODWORD(v52) = (613566757 * (unsigned __int64)(unsigned int)v49) >> 32;
            v53 = (unsigned int)v49 % 7;
            if ( (unsigned int)v49 % 7 )
            {
              if ( v53 == 1 )
              {
                v56 = 2 * ((2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64);
                v57 = (v56 ^ (v56 ^ (((2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64) >> 1)) & 0x5555555555555555i64) >> 2;
                v58 = 4
                    * (v56 ^ (v56 ^ (((2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64) >> 1)) & 0x5555555555555555i64);
                v59 = (16 * (v58 ^ (v58 ^ v57) & 0x3333333333333333i64)) ^ ((16
                                                                           * (v58 ^ (v58 ^ v57) & 0x3333333333333333i64)) ^ ((v58 ^ (v58 ^ v57) & 0x3333333333333333i64) >> 4)) & 0xF0F0F0F0F0F0F0Fi64;
                v60 = ((v59 << 8) ^ (v59 >> 8)) & 0xFF00FF00FF00FFi64;
                v52 = v59 << 8;
                v54 = __ROL8__(v52 ^ v60, 32);
              }
              else
              {
                v54 = state[v49];
                if ( v53 == 2 )
                {
                  v61 = v51 + 2 * v49;
                  LODWORD(v52) = (68174085 * (unsigned __int64)v61) >> 32;
                  v54 = (unsigned int)(v49 + v51) + __ROL8__(v50, (unsigned __int8)(v61 % 0x3F) + 1);
                }
                else
                {
                  v62 = v49 + v51;
                  if ( v53 == 3 )
                  {
                    LODWORD(v52) = (68174085 * (unsigned __int64)v62) >> 32;
                    v54 = __ROR8__(
                            (2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64,
                            (unsigned __int8)(v62 % 0x3F) + 1);
                  }
                  else
                  {
                    v63 = v62;
                    switch ( v53 )
                    {
                      case 4u:
                        v54 = ~(unsigned __int64)v62 ^ (2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64;
                        break;
                      case 5u:
                        v54 = ~v50 - v62;
                        break;
                      case 6u:
                        v64 = (2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64;
                        v65 = (4 * v64) ^ ((4 * v64) ^ (v64 >> 2)) & 0x3333333333333333i64;
                        v66 = ((16 * v65) ^ (v65 >> 4)) & 0xF0F0F0F0F0F0F0Fi64;
                        v52 = 16 * v65;
                        v54 = v63
                            + __ROL8__(
                                ((v52 ^ v66) << 8) ^ (((v52 ^ v66) << 8) ^ ((v52 ^ (unsigned __int64)v66) >> 8)) & 0xFF00FF00FF00FFi64,
                                32);
                        break;
                    }
                  }
                }
              }
            }
            else
            {
              LODWORD(v52) = (68174085 * (unsigned __int64)(unsigned int)v51) >> 32;
              v54 = __ROL8__(
                      v50 ^ ~(unsigned __int64)(unsigned int)(v51 - 1),
                      (unsigned __int8)((unsigned int)v51 % 0x3F) + 1);
            }
            if ( v47 >= *(_DWORD *)(((unsigned int)key ^ v54) + 0x14) )
            {
              v79 = 0i64;
            }
            else
            {
              if ( v53 )
              {
                if ( v53 == 1 )
                {
                  v67 = 2 * ((2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64);
                  v68 = (v67 ^ (v67 ^ (((2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64) >> 1)) & 0x5555555555555555i64) >> 2;
                  v69 = 4
                      * (v67 ^ (v67 ^ (((2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64) >> 1)) & 0x5555555555555555i64);
                  v70 = (16 * (v69 ^ (v69 ^ v68) & 0x3333333333333333i64)) ^ ((16
                                                                             * (v69 ^ (v69 ^ v68) & 0x3333333333333333i64)) ^ ((v69 ^ (v69 ^ v68) & 0x3333333333333333i64) >> 4)) & 0xF0F0F0F0F0F0F0Fi64;
                  v55 = __ROL8__((v70 << 8) ^ ((v70 << 8) ^ (v70 >> 8)) & 0xFF00FF00FF00FFi64, 32);
                }
                else
                {
                  v55 = state[v49];
                  if ( v53 == 2 )
                  {
                    v55 = (unsigned int)(v51 + v49)
                        + __ROL8__(v50, (unsigned __int8)(((int)v51 + 2 * (int)v49) % 0x3Fu) + 1);
                  }
                  else
                  {
                    v71 = v51 + v49;
                    if ( v53 == 3 )
                    {
                      v55 = __ROR8__(
                              (2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64,
                              (unsigned __int8)(v71 % 0x3F) + 1);
                    }
                    else
                    {
                      v72 = v71;
                      switch ( v53 )
                      {
                        case 4u:
                          v55 = ~(unsigned __int64)v71 ^ (2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64;
                          break;
                        case 5u:
                          v55 = ~v50 - v71;
                          break;
                        case 6u:
                          v73 = (2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64;
                          v74 = (4 * v73) ^ ((4 * v73) ^ (v73 >> 2)) & 0x3333333333333333i64;
                          v75 = (16 * v74) ^ ((16 * v74) ^ (v74 >> 4)) & 0xF0F0F0F0F0F0F0Fi64;
                          v55 = v72 + __ROL8__((v75 << 8) ^ ((v75 << 8) ^ (v75 >> 8)) & 0xFF00FF00FF00FFi64, 32);
                          break;
                      }
                    }
                  }
                }
              }
              else
              {
                v55 = __ROL8__(
                        v50 ^ ~(unsigned __int64)(unsigned int)(v51 - 1),
                        (unsigned __int8)((unsigned int)v51 % 0x3F) + 1);
              }
              v76 = (unsigned __int16)v47;
              v77 = v47;
              if ( v47 < 0 )
              {
                v77 = v47 + 0xFFFF;
                v76 = (unsigned __int16)v47 - 0x10000;
              }
              v78 = (__int64 *)((unsigned int)key ^ v55);
