v48 = 0x2545F4914F6CDD1Di64
                * ((unsigned int)key ^ (unsigned int)((_DWORD)key << 25) ^ (((unsigned int)key ^ ((unsigned __int64)(unsigned int)key >> 15)) >> 12));
            v52 = (v48 * (unsigned __int128)0x2492492492492493ui64) >> 64;
            v49 = v48 % 7;
            v50 = state[v49];
            v51 = HIDWORD(v48);
            LODWORD(v52) = (613566757 * (unsigned __int64)(unsigned int)v49) >> 32;
            v53 = (unsigned int)v49 % 7;
            if ( (unsigned int)v49 % 7 )
            {
              if ( v53 == 1 )
              {
                v56 = 2 * ((2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64);
                v57 = (v56 ^ (v56 ^ (((2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64) >> 1)) & 0x5555555555555555i64) >> 2;
                v58 = 4
                    * (v56 ^ (v56 ^ (((2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64) >> 1)) & 0x5555555555555555i64);
                v59 = (16 * (v58 ^ (v58 ^ v57) & 0x3333333333333333i64)) ^ ((16
                                                                           * (v58 ^ (v58 ^ v57) & 0x3333333333333333i64)) ^ ((v58 ^ (v58 ^ v57) & 0x3333333333333333i64) >> 4)) & 0xF0F0F0F0F0F0F0Fi64;
                v60 = ((v59 << 8) ^ (v59 >> 8)) & 0xFF00FF00FF00FFi64;
                v52 = v59 << 8;
                v54 = __ROL8__(v52 ^ v60, 32);
              }
              else
              {
                v54 = state[v49];
                if ( v53 == 2 )
                {
                  v61 = v51 + 2 * v49;
                  LODWORD(v52) = (68174085 * (unsigned __int64)v61) >> 32;
                  v54 = (unsigned int)(v49 + v51) + __ROL8__(v50, (unsigned __int8)(v61 % 0x3F) + 1);
                }
                else
                {
                  v62 = v49 + v51;
                  if ( v53 == 3 )
                  {
                    LODWORD(v52) = (68174085 * (unsigned __int64)v62) >> 32;
                    v54 = __ROR8__(
                            (2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64,
                            (unsigned __int8)(v62 % 0x3F) + 1);
                  }
                  else
                  {
                    v63 = v62;
                    switch ( v53 )
                    {
                      case 4u:
                        v54 = ~(unsigned __int64)v62 ^ (2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64;
                        break;
                      case 5u:
                        v54 = ~v50 - v62;
                        break;
                      case 6u:
                        v64 = (2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64;
                        v65 = (4 * v64) ^ ((4 * v64) ^ (v64 >> 2)) & 0x3333333333333333i64;
                        v66 = ((16 * v65) ^ (v65 >> 4)) & 0xF0F0F0F0F0F0F0Fi64;
                        v52 = 16 * v65;
                        v54 = v63
                            + __ROL8__(
                                ((v52 ^ v66) << 8) ^ (((v52 ^ v66) << 8) ^ ((v52 ^ (unsigned __int64)v66) >> 8)) & 0xFF00FF00FF00FFi64,
                                32);
                        break;
                    }
                  }
                }
              }
            }
            else
            {
              LODWORD(v52) = (68174085 * (unsigned __int64)(unsigned int)v51) >> 32;
              v54 = __ROL8__(
                      v50 ^ ~(unsigned __int64)(unsigned int)(v51 - 1),
                      (unsigned __int8)((unsigned int)v51 % 0x3F) + 1);
            }
            if ( v47 >= *(_DWORD *)(((unsigned int)key ^ v54) + 0x14) )
            {
              v79 = 0i64;
            }
            else
            {
              if ( v53 )
              {
                if ( v53 == 1 )
                {
                  v67 = 2 * ((2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64);
                  v68 = (v67 ^ (v67 ^ (((2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64) >> 1)) & 0x5555555555555555i64) >> 2;
                  v69 = 4
                      * (v67 ^ (v67 ^ (((2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64) >> 1)) & 0x5555555555555555i64);
                  v70 = (16 * (v69 ^ (v69 ^ v68) & 0x3333333333333333i64)) ^ ((16
                                                                             * (v69 ^ (v69 ^ v68) & 0x3333333333333333i64)) ^ ((v69 ^ (v69 ^ v68) & 0x3333333333333333i64) >> 4)) & 0xF0F0F0F0F0F0F0Fi64;
                  v55 = __ROL8__((v70 << 8) ^ ((v70 << 8) ^ (v70 >> 8)) & 0xFF00FF00FF00FFi64, 32);
                }
                else
                {
                  v55 = state[v49];
                  if ( v53 == 2 )
                  {
                    v55 = (unsigned int)(v51 + v49)
                        + __ROL8__(v50, (unsigned __int8)(((int)v51 + 2 * (int)v49) % 0x3Fu) + 1);
                  }
                  else
                  {
                    v71 = v51 + v49;
                    if ( v53 == 3 )
                    {
                      v55 = __ROR8__(
                              (2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64,
                              (unsigned __int8)(v71 % 0x3F) + 1);
                    }
                    else
                    {
                      v72 = v71;
                      switch ( v53 )
                      {
                        case 4u:
                          v55 = ~(unsigned __int64)v71 ^ (2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64;
                          break;
                        case 5u:
                          v55 = ~v50 - v71;
                          break;
                        case 6u:
                          v73 = (2 * v50) ^ ((2 * v50) ^ (v50 >> 1)) & 0x5555555555555555i64;
                          v74 = (4 * v73) ^ ((4 * v73) ^ (v73 >> 2)) & 0x3333333333333333i64;
                          v75 = (16 * v74) ^ ((16 * v74) ^ (v74 >> 4)) & 0xF0F0F0F0F0F0F0Fi64;
                          v55 = v72 + __ROL8__((v75 << 8) ^ ((v75 << 8) ^ (v75 >> 8)) & 0xFF00FF00FF00FFi64, 32);
                          break;
                      }
                    }
                  }
                }
              }
              else
              {
                v55 = __ROL8__(
                        v50 ^ ~(unsigned __int64)(unsigned int)(v51 - 1),
                        (unsigned __int8)((unsigned int)v51 % 0x3F) + 1);
              }
              v76 = (unsigned __int16)v47;
              v77 = v47;
              if ( v47 < 0 )
              {
                v77 = v47 + 0xFFFF;
                v76 = (unsigned __int16)v47 - 0x10000;
              }
              v78 = (__int64 *)((unsigned int)key ^ v55);
